{"version":3,"file":"static/js/743.fb7b5201.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/ReviewsList/ReviewsList.styled.jsx","components/Reviews/ReviewItem/ReviewItem.styled.jsx","components/Reviews/ReviewItem/ReviewItem.jsx","components/Reviews/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","services/MoviesApi.jsx","services/Notify.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 30px 0;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from 'components/Loader/Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderWrapper>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#fd5103\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ReviewsListContainer = styled.ul`\n  max-width: 1440px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-bottom: 20px;\n\n  list-style: none;\n`;\n","import styled from 'styled-components';\n\nexport const ReviewCard = styled.li`\n  margin-bottom: 32px;\n\n  max-width: 1000px;\n  padding: 0 15px;\n\n  overflow: hidden;\n  outline: none;\n`;\n\nexport const AuthorName = styled.h3`\n  margin-bottom: 16px;\n  font-size: 18px;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: #fcfcfcb7;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  ReviewCard,\n  AuthorName,\n  Text,\n} from 'components/Reviews/ReviewItem/ReviewItem.styled';\n\nexport default function ReviewItem({ review }) {\n  return (\n    <ReviewCard>\n      <AuthorName>{review.author}</AuthorName>\n      <Text>{review.content}</Text>\n    </ReviewCard>\n  );\n}\n\nReviewItem.propTypes = {\n  review: PropTypes.objectOf(\n    PropTypes.shape({\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport { ReviewsListContainer } from 'components/Reviews/ReviewsList/ReviewsList.styled';\nimport ReviewItem from 'components/Reviews/ReviewItem/ReviewItem';\n\nexport default function ReviewsList({ reviews }) {\n  return (\n    <ReviewsListContainer>\n      {reviews.map(review => (\n        <ReviewItem key={review.id} review={review} />\n      ))}\n    </ReviewsListContainer>\n  );\n}\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as Notify from 'services/Notify';\n\nimport { GetMovieReviews } from 'services/MoviesApi';\nimport Loader from 'components/Loader/Loader';\nimport ReviewsList from 'components/Reviews/ReviewsList/ReviewsList';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        const response = await GetMovieReviews(movieId);\n        if (response.data.results.length) {\n          setReviews(response.data.results);\n        } else {\n          Notify.NotificationError(Notify.NO_FOUND_REVIEWS);\n        }\n      } catch (error) {\n        Notify.NotificationError(`${Notify.ERROR_MESSAGE} ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return <>{isLoading ? <Loader /> : <ReviewsList reviews={reviews} />}</>;\n}\n\nReviews.propTypes = {\n  movie: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b0cf6b13af537de1f960eba55e00f400';\n\nasync function FetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return response;\n}\n\nasync function FetchQueryMovies(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n  );\n  return response;\n}\n\nasync function FetchMoviesDetails(movie_id) {\n  const response = await axios.get(`movie/${movie_id}?api_key=${API_KEY}`);\n  return response;\n}\n\nasync function GetMoviesGenresList() {\n  const response = await axios.get(`genre/movie/list?api_key=${API_KEY}`);\n  return response;\n}\n\nasync function GetMovieCast(movie_id) {\n  const response = await axios.get(\n    `movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nasync function GetMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport {\n  FetchTrendingMovies,\n  FetchQueryMovies,\n  FetchMoviesDetails,\n  GetMoviesGenresList,\n  GetMovieCast,\n  GetMovieReviews,\n};\n\nGetMovieCast.propTypes = { movieId: PropTypes.number.isRequired };\nFetchMoviesDetails.propTypes = { movieId: PropTypes.number.isRequired };\nFetchQueryMovies.propTypes = { searchQuery: PropTypes.string.isRequired };\n","import { NotificationManager } from 'react-notifications';\n\nconst INFO_MESSAGE =\n  \"We're sorry, but you've reached the end of search results.\";\nconst EMPTY_QUERY_MESSAGE = 'Please enter your search query.';\nconst NO_FOUND_MESSAGE =\n  'Sorry, there are no movies matching your search query. Please try again.';\nconst NO_FOUND_REVIEWS = \"We don't have any reviews for this movie.\";\nconst ERROR_MESSAGE = 'API error:';\n\nfunction NotificationInfo(message) {\n  NotificationManager.info(message);\n}\nfunction NotificationWarning(message) {\n  NotificationManager.warning(message);\n}\nfunction NotificationError(message) {\n  NotificationManager.error(message);\n}\n\nexport {\n  INFO_MESSAGE,\n  EMPTY_QUERY_MESSAGE,\n  NO_FOUND_MESSAGE,\n  NO_FOUND_REVIEWS,\n  ERROR_MESSAGE,\n  NotificationInfo,\n  NotificationWarning,\n  NotificationError,\n};\n"],"names":["LoaderWrapper","styled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ReviewsListContainer","ReviewCard","AuthorName","Text","ReviewItem","review","author","content","ReviewsList","reviews","map","id","Reviews","movieId","useParams","useState","isLoading","setIsLoading","setReviews","useEffect","GetMovieReviews","response","data","results","length","Notify","message","fetchData","axios","API_KEY","FetchTrendingMovies","FetchQueryMovies","searchQuery","FetchMoviesDetails","movie_id","GetMovieCast","propTypes","PropTypes","EMPTY_QUERY_MESSAGE","NO_FOUND_MESSAGE","NO_FOUND_REVIEWS","ERROR_MESSAGE","NotificationWarning","NotificationManager","NotificationError"],"sourceRoot":""}