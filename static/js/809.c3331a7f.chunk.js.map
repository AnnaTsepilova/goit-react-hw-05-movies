{"version":3,"file":"static/js/809.c3331a7f.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieDetails/MovieDetails.jsx","services/MoviesApi.jsx","services/Notify.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 30px 0;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from 'components/Loader/Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderWrapper>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#fd5103\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderWrapper>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieCardContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 1440px;\n  padding: 36px 15px 0 15px;\n`;\n\nexport const MovieCard = styled.div`\n  display: block;\n  width: 100%;\n  height: auto;\n`;\n\nexport const MainInfoWrapper = styled.div`\n  display: flex;\n  padding-top: 32px;\n  padding-bottom: 32px;\n`;\n\nexport const PosterWrapper = styled.div`\n  display: block;\n  width: 328px;\n  height: auto;\n  object-fit: cover;\n`;\nexport const Poster = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const Description = styled.div`\n  padding-left: 32px;\n  max-width: 900px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-top: 24px;\n  font-size: 32px;\n`;\nexport const DescrTitle = styled.h3`\n  margin-top: 24px;\n  font-size: 20px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 14px;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: #fcfcfcb7;\n`;\n\nexport const TextDate = styled(Text)`\n  margin-top: 24px;\n`;\n\nexport const AddInfoWrapper = styled(MainInfoWrapper)`\n  padding-top: 32px;\n  border-top: 1px solid rgb(253, 81, 3);\n  align-items: center;\n`;\n\nexport const SubTitle = styled.h2`\n  margin-right: 16px;\n  font-size: 24px;\n`;\nexport const AddInfoLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  margin-right: 16px;\n  padding: 10px 16px;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: #fcfcfc;\n  outline: none;\n  border: 1px solid #e3e3e3;\n  border-radius: 8px;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    border: 1px solid rgb(253, 81, 3);\n    box-shadow: rgb(253, 81, 3) 0px 0px 5px 2px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  justify-content: space-between;\n\n  background-size: 50%;\n  background-repeat: no-repeat;\n  background-position: center;\n\n  margin-right: 16px;\n  padding: 8px 16px;\n\n  width: 140px;\n\n  text-decoration: none;\n\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: #fcfcfc;\n  background-color: #202025;\n\n  outline: none;\n  border: 1px solid #e3e3e3;\n  border-radius: 8px;\n\n  cursor: pointer;\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    border: 1px solid rgb(253, 81, 3);\n    box-shadow: rgb(253, 81, 3) 0px 0px 5px 2px;\n  }\n`;\n","import { BackLink } from 'components/BackLink/BackLink.styled';\nimport { HiArrowNarrowLeft } from 'react-icons/hi';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ButtonGoBack() {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <BackLink to={backLinkHref}>\n      <HiArrowNarrowLeft\n        style={{ width: '1.3em', height: '1.3em', marginRight: '8px' }}\n      />\n      Go back\n    </BackLink>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Outlet, useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport * as Notify from 'services/Notify';\n\nimport {\n  MovieCardContainer,\n  MovieCard,\n  MainInfoWrapper,\n  PosterWrapper,\n  Poster,\n  Description,\n  MovieTitle,\n  DescrTitle,\n  Text,\n  TextDate,\n  AddInfoWrapper,\n  SubTitle,\n  AddInfoLink,\n} from 'components/MovieDetails/MovieDetails.styled';\n\nimport { FetchMoviesDetails, GetMovieCast } from 'services/MoviesApi';\nimport ButtonGoBack from 'components/BackLink/BackLink';\nimport Loader from 'components/Loader/Loader';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [genres, setGenres] = useState([]);\n  const [cast, setCast] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  let moviePosterSrc = require('services/no-poster.png');\n  if (movie.poster_path) {\n    moviePosterSrc = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n  }\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        const response = await FetchMoviesDetails(movieId);\n        console.log(response);\n        setMovie(response.data);\n        setGenres(response.data.genres.map(genre => genre.name).join(' '));\n      } catch (error) {\n        Notify.NotificationError(`${Notify.ERROR_MESSAGE} ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    async function fetchData() {\n      try {\n        setIsLoading(true);\n        const response = await GetMovieCast(movieId);\n\n        setCast(response.data.cast.map(cast => cast));\n      } catch (error) {\n        Notify.NotificationError(`${Notify.ERROR_MESSAGE} ${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  const onBtnClick = () => {\n    location.state\n      ? navigate(location.state.pathname + location.state.search)\n      : navigate('/');\n  };\n\n  return (\n    <>\n      <MovieCardContainer>\n        <ButtonGoBack onClick={onBtnClick} />\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <MovieCard>\n            <MainInfoWrapper>\n              <PosterWrapper>\n                <Poster src={moviePosterSrc} alt={movie.title} width={270} />\n              </PosterWrapper>\n              <Description>\n                <MovieTitle>{movie.title}</MovieTitle>\n                <TextDate>\n                  Release date:{' '}\n                  {new Date(movie.release_date).toLocaleDateString()}\n                </TextDate>\n                <Text>\n                  User Score: {Math.round(movie.vote_average * 1000) / 100}%\n                </Text>\n                <DescrTitle>Overview:</DescrTitle>\n                <Text>{movie.overview}</Text>\n                <DescrTitle>Genres:</DescrTitle>\n                <Text>{genres}</Text>\n              </Description>\n            </MainInfoWrapper>\n            <AddInfoWrapper>\n              <SubTitle>Additional information</SubTitle>\n              <AddInfoLink to={`cast`}>Cast</AddInfoLink>\n              <AddInfoLink to={`reviews`}>Reviews</AddInfoLink>\n            </AddInfoWrapper>\n          </MovieCard>\n        )}\n      </MovieCardContainer>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.number,\n  movie: PropTypes.objectOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      release_date: PropTypes.string,\n      vote_average: PropTypes.number,\n      overview: PropTypes.string,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b0cf6b13af537de1f960eba55e00f400';\n\nasync function FetchTrendingMovies() {\n  const response = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return response;\n}\n\nasync function FetchQueryMovies(searchQuery) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`\n  );\n  return response;\n}\n\nasync function FetchMoviesDetails(movie_id) {\n  const response = await axios.get(`movie/${movie_id}?api_key=${API_KEY}`);\n  return response;\n}\n\nasync function GetMoviesGenresList() {\n  const response = await axios.get(`genre/movie/list?api_key=${API_KEY}`);\n  return response;\n}\n\nasync function GetMovieCast(movie_id) {\n  const response = await axios.get(\n    `movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nasync function GetMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport {\n  FetchTrendingMovies,\n  FetchQueryMovies,\n  FetchMoviesDetails,\n  GetMoviesGenresList,\n  GetMovieCast,\n  GetMovieReviews,\n};\n\nGetMovieCast.propTypes = { movieId: PropTypes.number.isRequired };\nFetchMoviesDetails.propTypes = { movieId: PropTypes.number.isRequired };\nFetchQueryMovies.propTypes = { searchQuery: PropTypes.string.isRequired };\n","import { NotificationManager } from 'react-notifications';\n\nconst INFO_MESSAGE =\n  \"We're sorry, but you've reached the end of search results.\";\nconst EMPTY_QUERY_MESSAGE = 'Please enter your search query.';\nconst NO_FOUND_MESSAGE =\n  'Sorry, there are no movies matching your search query. Please try again.';\nconst NO_FOUND_REVIEWS = \"We don't have any reviews for this movie.\";\nconst ERROR_MESSAGE = 'API error:';\n\nfunction NotificationInfo(message) {\n  NotificationManager.info(message);\n}\nfunction NotificationWarning(message) {\n  NotificationManager.warning(message);\n}\nfunction NotificationError(message) {\n  NotificationManager.error(message);\n}\n\nexport {\n  INFO_MESSAGE,\n  EMPTY_QUERY_MESSAGE,\n  NO_FOUND_MESSAGE,\n  NO_FOUND_REVIEWS,\n  ERROR_MESSAGE,\n  NotificationInfo,\n  NotificationWarning,\n  NotificationError,\n};\n"],"names":["LoaderWrapper","styled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","MovieCardContainer","MovieCard","MainInfoWrapper","PosterWrapper","Poster","Description","MovieTitle","DescrTitle","Text","TextDate","AddInfoWrapper","SubTitle","AddInfoLink","NavLink","BackLink","ButtonGoBack","backLinkHref","useLocation","state","from","to","style","marginRight","MovieDetails","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","genres","setGenres","setCast","navigate","useNavigate","location","moviePosterSrc","require","poster_path","useEffect","FetchMoviesDetails","response","console","log","data","map","genre","name","join","Notify","message","fetchData","GetMovieCast","cast","onClick","pathname","search","src","alt","title","Date","release_date","toLocaleDateString","Math","round","vote_average","overview","Suspense","fallback","axios","API_KEY","FetchTrendingMovies","FetchQueryMovies","searchQuery","movie_id","GetMovieReviews","propTypes","PropTypes","EMPTY_QUERY_MESSAGE","NO_FOUND_REVIEWS","ERROR_MESSAGE","NotificationWarning","NotificationManager","NotificationError"],"sourceRoot":""}